import telebot
import time
from dotenv import load_dotenv
from os import environ
import loguru

load_dotenv()

@loguru.logger.catch 
def run_bot():
    TOKEN = environ.get('TELEGRAM_TOKEN')
    BAD_WORDS = environ.get('BAD_WORDS').split(',')
    DELETE_LINKS = environ.get('DELETE_LINKS')

    bot = telebot.TeleBot(TOKEN)

    def is_admin(message):
        admins = [admin.user.id for admin in bot.get_chat_administrators(message.chat.id)]
        if message.from_user.id in admins:
            return True
        else:
            return False

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    @bot.message_handler(content_types=["new_chat_members"])
    def handler_new_member(message):
        message_id = bot.send_message(message.chat.id, text=f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @{message.new_chat_members[0].username} üëã',
                                      reply_markup=telebot.types.InlineKeyboardMarkup([
                                          [
                                              telebot.types.InlineKeyboardButton(text="üëâ –ü—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã",
                                                                                 callback_data='rules')
                                          ]]))
        time.sleep(10)
        bot.delete_message(message.chat.id, message_id.message_id)

    # –ö–æ–º–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª
    @bot.message_handler(commands=['rules'])
    def show_rules(message):
        message_id = bot.send_message(message.chat.id, text=environ.get('RULES_TEXT'), parse_mode='Markdown')
        time.sleep(60)
        bot.delete_message(message.chat.id, message_id.message_id)
    
    # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∞–≤–∏–ª
    @bot.callback_query_handler(func=lambda call: call.data == "rules")
    def callback_inline(call):
        message_id = bot.send_message(call.message.chat.id, text=environ.get('RULES_TEXT'), parse_mode='Markdown')
        time.sleep(60)
        bot.delete_message(call.message.chat.id, message_id.message_id)

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ (–Ω–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)  
    @bot.message_handler(func=lambda message: True)  
    def delete_bad_words(message):
        current_message_text = message.text.lower()
        is_bad = False
        for word in BAD_WORDS:
            word = word.replace(' ','').lower()
            if word in current_message_text: is_bad = True    

        if not is_admin(message) and (is_bad or (DELETE_LINKS and ('http://' in message.text or 'https://' in message.text))):
            bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
            message_id = bot.send_message(chat_id=message.chat.id,
                                          text=f'‚ö†Ô∏è @{message.from_user.username}\n–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–æ –Ω–∞—Ä—É—à–∞–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —Å–ª–µ–¥—É–µ—Ç–µ –≤—Å–µ–º —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±—É–¥—É—â–∏—Ö –ø—Ä–æ–±–ª–µ–º.', 
                                          reply_markup=telebot.types.InlineKeyboardMarkup([
                                              [
                                                  telebot.types.InlineKeyboardButton(text="üëâ –ü—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã", callback_data='rules')
                                              ]]))
            time.sleep(10)
            bot.delete_message(message.chat.id, message_id.message_id)

    while True:
        try:
            loguru.logger.info("Start Telegram Bot")
            bot.polling()
        except Exception as e:
            loguru.logger.exception(f"Error in bot {e}\n Restarting...")

run_bot()